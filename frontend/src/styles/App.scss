@use './_variables' as *;

.App {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  font-family: $font-family;
  direction: rtl; /* For Hebrew text */
  
  &.App-crawling {
    .crawler-status {
      border-color: $warning-color;
      animation: pulse 2s infinite;
    }
  }
  
  &.App-disconnected {
    .connection-status {
      animation: flash 1s infinite;
    }
  }
}

// Header styles
.App-header {
  text-align: center;
  margin-bottom: 30px;
  position: relative;
  
  h1 {
    color: $text-color;
  }
}

// Connection status
.connection-status {
  position: absolute;
  top: 10px;
  left: 20px; 
  padding: 8px 15px;
  border-radius: $border-radius;
  font-size: 0.9em;
  font-weight: bold;
  display: flex;
  align-items: center;
  gap: 8px;
  border: 1px solid transparent;
  transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;

  .status-text {
    flex-grow: 1;
  }

  .reconnect-button {
    background: none;
    border: 1px solid currentColor;
    color: inherit;
    padding: 3px 8px;
    border-radius: 3px;
    cursor: pointer;
    font-size: 0.9em;
    transition: background-color 0.2s ease, opacity 0.2s ease;
    
    &:hover {
      background-color: rgba(255, 255, 255, 0.2);
    }
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      background-color: transparent;
    }
  }

  // Connected state
  &.status-connected {
    background-color: rgba($success-color, 0.1);
    border-color: $success-color;
    color: darken($success-color, 10%);
    
    // Add checkmark icon
    &::before {
      content: 'âœ“'; // Simple checkmark
      font-weight: bold;
      color: $success-color;
    }
  }

  // Connecting state
  &.status-connecting {
    background-color: rgba($info-color, 0.1);
    border-color: $info-color;
    color: darken($info-color, 10%);
  }

  // Disconnected state
  &.status-disconnected {
    background-color: rgba($warning-color, 0.1);
    border-color: $warning-color;
    color: darken($warning-color, 20%);
    animation: pulse 2s infinite;
  }

  // Error state
  &.status-error {
    background-color: rgba($error-color, 0.1);
    border-color: $error-color;
    color: darken($error-color, 10%);
    animation: flash 1s infinite;
  }
}

// Animations
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba($warning-color, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba($warning-color, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba($warning-color, 0);
  }
}

@keyframes flash {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

// Error handling styles
.error-boundary, .error-fallback {
  text-align: center;
  padding: 40px 20px;
  margin: 20px auto;
  max-width: 800px;
  background-color: rgba($warning-color, 0.1);
  border: 1px solid rgba($warning-color, 0.3);
  border-radius: $border-radius;
  box-shadow: $box-shadow-light;
  
  h1 {
    color: $error-color;
    margin-bottom: 15px;
  }
  
  p {
    margin-bottom: 20px;
    font-size: 1.1rem;
  }
  
  button {
    background-color: $primary-color;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: $border-radius;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s;
    
    &:hover {
      background-color: darken($primary-color, 10%);
    }
  }
  
  details {
    margin-top: 30px;
    text-align: left;
    
    pre {
      background-color: $light-bg-color;
      padding: 15px;
      border-radius: $border-radius;
      overflow: auto;
      margin-top: 10px;
      font-size: 0.9rem;
      line-height: 1.5;
    }
  }
} 